steps:
  - id: Create Pub/Sub Topic
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - -c
      - >
        gcloud pubsub topics create "appengine-request-log"
        ||
        gcloud pubsub topics update "appengine-request-log" --recompute-message-storage-policy
  - id: Create Log Sink
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - -c
      - >
        gcloud logging sinks create "appengine-request-log"
        "pubsub.googleapis.com/projects/$PROJECT_ID/topics/appengine-request-log"
        --log-filter='resource.type="gae_app"
        logName="projects/$PROJECT_ID/logs/appengine.googleapis.com%2Frequest_log"
        protoPayload.status!=404
        protoPayload.status!=301'
        ||
        gcloud logging sinks update "appengine-request-log"
        "pubsub.googleapis.com/projects/$PROJECT_ID/topics/appengine-request-log"
        --log-filter='resource.type="gae_app"
        logName="projects/$PROJECT_ID/logs/appengine.googleapis.com%2Frequest_log"
        protoPayload.status!=404
        protoPayload.status!=301'
  - id: Grant Log Sink Pub/Sub Permissions
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - -c
      - >
        gcloud pubsub topics add-iam-policy-binding "appengine-request-log" --role roles/pubsub.publisher --member
        $(gcloud logging sinks describe appengine-request-log --format "value(writerIdentity)")
  - id: Deploy to Cloud Functions
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - functions
      - deploy
      - "matomo_log_visit"
      - --runtime=python39
      - --memory=128MB
      - --timeout=5s
      - --source=.
      - --trigger-topic=appengine-request-log
timeout: "5m"
